package model;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

public class Agenda {

    private String nombre;
    private Contacto[] listaContactos;
    private Grupo[] listaGrupos;
    private Reunion[] listaReuniones;

    public Agenda(String nombre, int numeroContactos, int numeroGrupos, int numeroReuniones) {
        this.nombre = nombre;
        this.listaContactos = new Contacto[numeroContactos];
        this.listaGrupos = new Grupo[numeroGrupos];
        this.listaReuniones = new Reunion[numeroReuniones];
    }

    public String getNombre() {
        return nombre;
    }

    public void setNombre(String nombre) {
        this.nombre = nombre;
    }

    public Contacto[] getListaContactos() {
        return listaContactos;
    }

    public void setListaContactos(Contacto[] listaContactos) {
        this.listaContactos = listaContactos;
    }

    public Grupo[] getListaGrupos() {
        return listaGrupos;
    }

    public void setListaGrupos(Grupo[] listaGrupos) {
        this.listaGrupos = listaGrupos;
    }

    public Reunion[] getListaReuniones() {
        return listaReuniones;
    }

    public void setListaReuniones(Reunion[] listaReuniones) {
        this.listaReuniones = listaReuniones;
    }

    public void aniadirContacto(Contacto newContacto) {
        if (existeContacto(newContacto)) {
            System.out.println("El contacto ya existe.");
            return;
        }

        int posDisponible = obtenerPosicion();

        if (posDisponible == -1) {
            System.out.println("Agenda llena.");
            return;
        }

        listaContactos[posDisponible] = newContacto;
        System.out.println("Contacto añadido exitosamente.");
    }

    private int obtenerPosicion() {
        for (int i = 0; i < listaContactos.length; i++) {
            if (listaContactos[i] == null) {
                return i;
            }
        }

        return -1;
    }

    private boolean existeContacto(Contacto contacto) {
        for (Contacto c : listaContactos) {
            if (c != null && c.equals(contacto)) {
                return true;
            }
        }

        return false;
    }

    public void eliminarContacto(Contacto contacto) {
        for (int i = 0; i < listaContactos.length; i++) {
            if (listaContactos[i] != null && listaContactos[i].equals(contacto)) {
                listaContactos[i] = null;
                System.out.println("Contacto eliminado exitosamente.");
            }
        }

        System.out.println("No se encontró el contacto a eliminar.");
    }

    public void listarContactos() {
        System.out.println("Lista de contactos:");

        for (Contacto c : listaContactos) {
            if (c != null) {
                System.out.println(c);
            }
        }
        }

    public String buscarContactoPorNombre(String nombre) {
        for (Contacto contacto : listaContactos) {
            if (contacto != null && contacto.getNombre().equalsIgnoreCase(nombre)) {
                return "Teléfono de " + nombre + ": " + contacto.getTelefono();
            }
        }
        return "Contacto no encontrado";
    }

    public boolean agendaLlena() {
        for (Contacto contacto : listaContactos) {
            if (contacto == null) {
                return false;
            }
        }
        return true;
    }

    public int huecosLibres() {
        int huecos = 0;
        for (Contacto contacto : listaContactos) {
            if (contacto == null) {
                huecos++;
            }
        }
        return huecos;
    }

    }
